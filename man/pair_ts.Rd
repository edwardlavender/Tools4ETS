% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_ts.R
\name{pair_ts}
\alias{pair_ts}
\title{Pair time series}
\usage{
pair_ts(
  d1,
  d2,
  time_col,
  key_col = NULL,
  val_col,
  method = "match_ts_nearest",
  min_gap = NULL,
  max_gap = min_gap,
  units = "mins",
  control_beyond_gap = NULL
)
}
\arguments{
\item{d1}{A dataframe that contains, at a minimum, a vector of timestamps, to which observations need to be added from \code{d2}.}

\item{d2}{A dataframe that contains, at a minimum, a vector of timestamps and associated observations, to be added to \code{d1}.}

\item{time_col}{A character that defines the name of the column that contains timestamps in \code{d1} and \code{d2}.}

\item{key_col}{(optional) A character that defines the name of the column that contains keys in \code{d1} and \code{d2}. This is required for \code{method = "match_ts_nearest_by_key"} (see below).}

\item{val_col}{A character that defines the name of the column that contains observations in \code{d2}.}

\item{method}{A character that defines the matching method. The options currently implemented are \code{"match_ts_nearest"}, which implements \code{\link[Tools4ETS]{match_ts_nearest}} and \code{"match_ts_nearest_by_key"} which implements \code{\link[Tools4ETS]{match_ts_nearest_by_key}}.}

\item{min_gap}{(optional) A number that defines the minimum time gap (in user-defined units, see \code{units}, below) between times in \code{d1} and the times of observations that are added to \code{d1} from \code{d2}. This is useful if, for instance, some of the nearest observations in \code{d2} occurred long before the nearest observations in \code{d1}. If provided, the function counts the number of observations which do not meet this requirement and, if requested via \code{control_beyond_gap}, removes these from the returned dataframe or sets them to NA (see below).}

\item{max_gap}{As above, for \code{min_gap}, but the maximum time gap.}

\item{units}{A character that defines the units of the inputted \code{min_gap} or \code{max_gap}. This is passed to \code{\link[base]{difftime}}.}

\item{control_beyond_gap}{A character that defines whether or not to set rows from \code{d1} that contain observations from \code{d2} that exceed \code{min_gap} or \code{max_gap} to NA (\code{"NA"}) or to remove those rows (\code{"remove"}).}
}
\value{
The function returns a dataframe, \code{d1}, as inputted, with an added column (whose name is given by \code{val_col}), comprising values added from another dataframe, \code{d2}. Any observations in \code{d1} for which there are not observations in \code{d2} occurring within some time window (defined by \code{min_gap} and \code{max_gap}), if specified, are counted and, if requested, removed from the returned dataframe.
}
\description{
This function adds observations from one time series to another time series using a matching process (e.g., nearest neighbour interpolation). This is useful when you have a main dataframe to which you need to add observations (e.g., those occurring closest in time) from another dataframe.
}
\examples{
#### Example (1) Pair time series using method = "match_nearest_ts()"
# Define dataframe to which we want to add information
d1 <- data.frame(t = seq.POSIXt(as.POSIXct("2016-01-01"), as.POSIXct("2016-01-02"), by = "hours"))
# Define dataframe in which information is contained
d2 <- data.frame(t = seq.POSIXt(as.POSIXct("2016-01-01"), as.POSIXct("2016-01-02"), by = "mins"))
d2$vals <- runif(nrow(d2), 0, 50)
pair_ts(d1, d2, time_col = "t", val_col = "vals", method = "match_ts_nearest")

#### Example (2) Pair time series sing method = "match_nearest_ts_by_key()"
# Define dataframes
d1 <- data.frame(t = as.POSIXct(c("2016-01-01 18:00:00",
                                  "2016-01-01 17:00:00",
                                  "2016-01-01 13:00:00",
                                  "2016-01-01 14:00:00",
                                  "2016-01-01 17:00:00",
                                  "2016-01-01 21:00:00")),
                 key = c(2, 2, 2, 1, 1, 3))
d2 <- data.frame(t = as.POSIXct(c("2016-01-01 21:00:00",
                                  "2016-01-01 14:00:00",
                                  "2016-01-01 18:00:00",
                                  "2016-01-01 17:00:00",
                                  "2016-01-01 22:00:00",
                                  "2016-01-01 20:00:00",
                                  "2016-01-01 13:00:00",
                                  "2016-01-01 17:00:00",
                                  "2016-01-01 16:00:00")),
                 key = c(2, 2, 2, 2, 2, 3, 3, 1, 1),
                 vals = stats::runif(9, 0, 1))
pair_ts(d1, d2,
        time_col = "t", key_col = "key", val_col = "vals",
        method = "match_ts_nearest_by_key")

#### Example (3) Flag observations that exceed a min/max gap
pair_ts(d1, d2,
        time_col = "t", key_col = "key", val_col = "vals",
        method = "match_ts_nearest_by_key",
        min_gap = 0,
        max_gap = 1,
        control_beyond_gap = "remove")

}
\author{
Edward Lavender
}
