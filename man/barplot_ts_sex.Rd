% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/barplot_ts_sex.R
\name{barplot_ts_sex}
\alias{barplot_ts_sex}
\title{Create a barplot of the number of individuals of each sex in timeseries}
\usage{
barplot_ts_sex(
  dat,
  id_column = "individual",
  f_column = "sex",
  cex.axis = 1,
  cex = 1
)
}
\arguments{
\item{dat}{A dataframe which contains a column which defines unique individuals and a column which defines their sex. Multiple observations from the same individual are supported because the function obtains the sex of each unique individual once.}

\item{id_column}{A character input which defines the name of the column in \code{dat} which distinguishes individuals.}

\item{f_column}{A character input which defines the name of the column in \code{dat} which defines the sex of each individual.}

\item{cex.axis}{A number which defines the font size for axis tick labels.}

\item{cex}{A number which defines the font sizes for axis labels.}
}
\value{
The function returns a pre-customised barplot showing the number of individuals of each sex in a dataframe.
}
\description{
This function produces a barplot showing the number of individuals of each sex in a timeseries. To do this, the function takes in a dataframe which contains a column distinguishing individuals and a column defining their sex, which are specified as character strings. The function then identifies the sex of each unique individual, sums the number of individuals of each sex and produces a barplot. This function is primarily intended for use in \code{\link[Tools4ETS]{GAMS4DTS}}.
}
\examples{

#### Example (1): A simple example
# Define a dataframe
set.seed(1)
dat <- data.frame(individual = 1:10)
dat$sex <- sample(c("M", "F"), size = nrow(dat), replace = TRUE)
# Define barplot
barplot_ts_sex(dat = dat,
               id_column = "individual",
               f_column = "sex")

#### Example (2) The function can support multiple observations for each individual
# Replicate dataframe 10 times reflecting 10 observations from each individual
dat_ls <- lapply(1:10, function(x){ dat$time <- x; return(dat) })
dat <- do.call(rbind, dat_ls)
dat <- dplyr::arrange(dat, dat$individual)
# Define barplot
barplot_ts_sex(dat = dat,
               id_column = "individual",
               f_column = "sex")


}
\author{
Edward Lavender
}
