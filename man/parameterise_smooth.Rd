% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameterise_smooth.R
\name{parameterise_smooth}
\alias{parameterise_smooth}
\title{Parameterise smooth functions and compare simulated and inferred smooths}
\usage{
parameterise_smooth(
  x,
  f,
  param = list(),
  parameterise_smooth_ls = NULL,
  plot = TRUE,
  add_sim_args = list(type = "l", lwd = 2),
  xlab = "",
  ylab = "",
  plot_gam = FALSE,
  dat,
  model,
  term,
  plot_gam_ls,
  add_model_predictions_args = list(),
  residuals = FALSE,
  add_residuals_args = list(),
  shift = 0,
  add_rug = FALSE,
  add_rug_args = list(),
  add_moons = FALSE,
  add_moons_args = list(),
  pretty_axis_args = list(side = c(1, 2), pretty = list(n = 10), axis = list(cex.axis =
    1.5, las = TRUE)),
  mtext_args = list()
)
}
\arguments{
\item{x}{A numeric sequence of values for which to evaluate the shape of a user-defined function (see below).}

\item{f}{A function which relates a covariate to a linear predictor/response.}

\item{param}{A named list of parameters and parameter values required to evaluate the function.}

\item{parameterise_smooth_ls}{A list from a previous implementation of \code{parameterise_smooth()}. This is useful following modelling when the aim is to compare simulated and model-inferred smooths. By supplying this list, the function does not have to recompute simulated smooths.}

\item{plot}{A logical input which defines whether or not to create a plot.}

\item{add_sim_args}{A named list of arguments to customise the visualisation of the simulated effect of a covariate on the plot.}

\item{xlab}{A character input which defines the label for the x axis. By default, this is \code{""} so that labels can be added via \code{mtext_args} which is more flexible (see below). However, the label can be specified via \code{xlab} for speed.}

\item{ylab}{A character input which defines the label for the y axis. By default, this is \code{""} so that labels can be added via \code{mtext_args} which is more flexible (see below). However, the label can be specified via \code{ylab} for speed.}

\item{plot_gam}{A logical input which defines whether or not to plot the output of a GAM on top of the simulated effect.}

\item{dat}{The dataframe used to fit the GAM.}

\item{model}{The model used to fit the GAM.}

\item{term}{A character specifying the term of interest.}

\item{plot_gam_ls}{The output of \code{\link[mgcv]{plot.gam}}. This is used as a quick method to add model predictions for the effect of a term on the response, confidence intervals and (optionally) partial residuals to the plot, since these are all computed by \code{\link[mgcv]{plot.gam}}.}

\item{add_model_predictions_args}{A named list of arguments passed to \code{\link[plot.pretty]{add_model_predictions}} to add predictions to the plot.}

\item{residuals}{A logical input which defines whether or not to add partial residuals to the plot.}

\item{add_residuals_args}{A named list of arguments to customise the partial residuals on the plot.}

\item{shift}{A number which defines a value by which to shift model predictions/partial residuals vertically. This can be necessary because \code{\link[mgcv]{plot.gam}} smooths are centred.}

\item{add_rug}{A logical input which defines whether or not to plot a rug. If so, \code{dat}, the dataframe used to fit the model, should be provided (see above).}

\item{add_rug_args}{A named list of arguments passed to \code{\link[graphics]{rug}} to customise the rug.}

\item{add_moons}{A logical input which defines whether or not to add moons to a plot. This is useful for visualising the effects of lunar phase in models of animal movement timeseries.}

\item{add_moons_args}{A named list of arguments passed to \code{\link[Tools4ETS]{add_moons}}.}

\item{pretty_axis_args}{A named list of arguments, passed to \code{\link[plot.pretty]{pretty_axis}} to customise axes().}

\item{mtext_args}{A named list of arguments, passed to \code{\link[graphics]{mtext}}, to add axis labels.}
}
\description{
This function helps the user to define reasonable functions for the effect of a covariate on a linear predictor/response for simulations. Then, model-based inferences of the effect of that covariate can be plotted on top of simulated effects to examine the performance of a model in terms of its ability to correctly estimate the simulated function under different scenarios.
}
\examples{

#### Example 1: Simulate a quadratic effect of variable (e.g. Julian day) on a response (e.g. depth)
# The function creates a plot, so we can 'play' with the parameters
# .... until we're happy with the shape:
smooth_julian_day <-
  parameterise_smooth(x = 0:365,
                      f = utils.add::quadratic,
                      param = list(a = -0.001, b = 1, h = 183, k = 15),
                      plot = TRUE)
# The function returns a list containing x, f, the parameters we chose and y values:
utils::str(smooth_julian_day)

}
\author{
Edward Lavender
}
